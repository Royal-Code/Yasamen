
@Render

@code {

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public bool CounterClockwise { get; set; }

    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object> AdditionalAttributes { get; set; }

    private RenderFragment Render => builder => {

        builder.OpenElement(0, "div");
        builder.AddMultipleAttributes(1, AdditionalAttributes);
        builder.AddAttribute(2, "b-animation");
        builder.AddAttribute(3, CounterClockwise ? "b-rotate-clockwise" : "b-rotate");
        builder.AddContent(4, ChildContent);
        builder.CloseElement();
    };
}
