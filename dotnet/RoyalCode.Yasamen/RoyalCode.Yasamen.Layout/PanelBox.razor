
<div @attributes="@AdditionalAttributes" class="@panelClasses(this)">
    <header class="@headerClasses(this)">
        @HeaderContent
    </header>
    <div class="@mainClasses(this)">
        @MainContent    
    </div>
    @if (FooterContent.IsNotEmptyFragment())
    {
        <footer class="@footerClasses(this)">
            @FooterContent
        </footer>
    }
</div>

@code {
    // static CssMap<PanelBox> for panel-box
    private static readonly CssMap<PanelBox> panelClasses = Css.Map<PanelBox>()
        .Add("panel-box")
        .Add(static c => c.PanelBorder)
        .Add(static c => c.PanelAdditionalClasses)
        .Build();

    // static CssMap<PanelBox> for panel-box-main
    private static readonly CssMap<PanelBox> mainClasses = Css.Map<PanelBox>()
        .Add("panel-box-main")
        .Add(static c => c.MainAdditionalClasses)
        .Build();

    // static CssMap<PanelBox> for panel-box-header
    private static readonly CssMap<PanelBox> headerClasses = Css.Map<PanelBox>()
        .Add("panel-box-header")
        .Add(static c => c.HeaderBorder)
        .Add(static c => c.HeaderAdditionalClasses)
        .Build();

    // static CssMap<PanelBox> for panel-box-footer
    private static readonly CssMap<PanelBox> footerClasses = Css.Map<PanelBox>()
        .Add("panel-box-footer")
        .Add(static c => c.FooterBorder)
        .Add(static c => c.FooterAdditionalClasses)
        .Build();

    [Parameter]
    public BorderClasses PanelBorder { get; set; } = Css.Border.Box();

    [Parameter]
    public BorderClasses HeaderBorder { get; set; } = Css.Border.Header();

    [Parameter]
    public BorderClasses FooterBorder { get; set; } = Css.Border.Footer();
    
    [Parameter]
    public string? PanelAdditionalClasses { get; set; }
    
    [Parameter]
    public string? MainAdditionalClasses { get; set; }
    
    [Parameter]
    public string? HeaderAdditionalClasses { get; set; }
    
    [Parameter]
    public string? FooterAdditionalClasses { get; set; }
    
    [Parameter]
    public RenderFragment? HeaderContent { get; set; }
    
    [Parameter]
    public RenderFragment? MainContent { get; set; }
    
    [Parameter]
    public RenderFragment? FooterContent { get; set; }
    
    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object>? AdditionalAttributes { get; set; }
}
