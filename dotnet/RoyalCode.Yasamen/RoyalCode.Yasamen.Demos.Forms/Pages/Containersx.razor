@page "/containers"

@inject CarService CarService;

<AppPageContent Title="Containers">

    <SecondaryButton Label="Resizeable" OnClick="ResizeToggle" AdditionalClasses="mb-3 me-1"/>

    <label>Resizeable: @resize</label>

    @if (cars is null)
    {
        <WorkingAlert Text="Carregando carros" />
    }
    else
    {
        <ModelEditor Model="cars">

            @foreach (var car in context)
            {
                <ModelContainer Model="car" Context="c" @key="car.Id"
                        UseContainer="true" Resize="resize"
                        AdditionalClasses="@($"mb-3 {@borders.CssClasses}")" >

                    <IntField @bind-Value="c.Id" Label="Id" Cols="2" />

                    <TextField @bind-Value="c.Name" Label="Name" Cols="4" />

                </ModelContainer>
            }

        </ModelEditor>
    }

</AppPageContent>

@code {
    private static readonly Borders borders = Borders.DefaultRoundedWithShadow;

    private bool resize = false;

    private IEnumerable<Car>? cars;

    protected override async Task OnInitializedAsync()
    {
        cars = await CarService.GetCars();
    }

    private void ResizeToggle()
    {
        resize = !resize;
    }
}
