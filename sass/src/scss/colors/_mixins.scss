@use "colors" as *;
@use "sass:map";

// Mixin para gerar as variáveis de cores no formato CSS
@mixin generate-color-variables() {
  @each $color-name, $scale in $color-scales {
    // Criando a variável --color-{color}
    --color-#{$color-name}: #{map.get($colors, $color-name)};
    @each $step, $color in $scale {
      // Criando a variável --color-{color}-{step}
      --color-#{$color-name}-#{$step}: #{$color};
    }
  }
}

$states: (
  hover: hover,
  focus: focus,
  active: active,
  disabled: disabled,
  read-only: read-only,
  focus-within: focus-within,
  first: first-child,
  last: last-child,
  odd: nth-child(odd),
  even: nth-child(even),
);

// Mixin para gerar classes de background color
@mixin generate-bg-classes() {
  @each $color-name, $scale in $var-colors-scales {
    // Criando a classe principal bg-{color} (ex: bg-blue → bg-blue-500)
    .bg-#{$color-name} {
      background-color: map.get($var-colors, $color-name);
    }
    @each $s-name, $state in $states {
      .#{$s-name}\:bg-#{$color-name}:#{$state} {
        @extend .bg-#{$color-name};
      }
    }

    // Criando classes bg-{color}-{step} (ex: bg-blue-100, bg-blue-900)
    @each $step, $color in $scale {
      .bg-#{$color-name}-#{$step} {
        background-color: $color;
      }
      @each $s-name, $state in $states {
        .#{$s-name}\:bg-#{$color-name}-#{$step}:#{$state} {
          @extend .bg-#{$color-name}-#{$step};
        }
      }
    }
  }
  // white e black
  .bg-white {
    background-color: white;
  }
  .bg-black {
    background-color: black;
  }
  // transparent, none
  .bg-transparent {
    background-color: transparent;
  }
  .bg-none {
    background: none;
  }
}

// Mixin para gerar classes de text color
@mixin generate-text-classes() {
  @each $color-name, $scale in $var-colors-scales {
    // Criando a classe principal text-{color} (ex: text-blue → text-blue-500)
    .text-#{$color-name} {
      color: map.get($var-colors, $color-name);
    }
    @each $s-name, $state in $states {
      .#{$s-name}\:text-#{$color-name}:#{$state} {
        @extend .text-#{$color-name};
      }
    }
    // Criando classes text-{color}-{step} (ex: text-blue-100, text-blue-900)
    @each $step, $color in $scale {
      .text-#{$color-name}-#{$step} {
        color: $color;
      }
      @each $s-name, $state in $states {
        .#{$s-name}\:text-#{$color-name}-#{$step}:#{$state} {
          @extend .text-#{$color-name}-#{$step};
        }
      }
    }

    // white e black
    .text-white {
      color: white;
    }
    .text-black {
      color: black;
    }
  }
}