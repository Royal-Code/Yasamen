@use "sizes" as *;
@use "spaces" as *;
@use "breaks" as *;
@use "sass:map";

// gera as variáveis de espaçamento
@mixin generate-sizes-variables() {
  @each $key, $value in $sizes-rem {
    --size-#{$key}: #{$value};
  }
  @each $key, $value in $spacing-rem {
    --space-#{$key}: #{$value};
  }
}

// gera as variáveis de breakpoints (--screen-{key})
@mixin generate-breakpoint-variables() {
  @each $key, $value in $breakpoints {
    --screen-#{$key}: #{$value};
  }
}

// classes para screen
@mixin generate-screen-classes() {
  @each $key, $value in $breakpoints {
    .screen-#{$key} {
      width: var(--screen-#{$key});
    }
  }
}

$w-classes-names: (w: width, max-w: max-width, min-w: min-width);
// classes para width
@mixin generate-width-classes() {

  $sizes: ();
  $sizes: map.merge($sizes, $sizes-alts);
  $sizes: map.merge($sizes, $var-sizes);
  $sizes: map.merge($sizes, $sizes-divs);
  $sizes: map.merge($sizes, $w-sizes);


  @each $key, $value in $sizes {
    @each $w-class, $w-prop in $w-classes-names {
      // se prop for max-width e o valor for auto, não gera a classe
      @if not ($w-prop == max-width and $value == auto) {
        .#{$w-class}-#{$key} {
          #{$w-prop}: #{$value};
        }
      }
    }
    //@each $breakpoint, $v in $breakpoints {
    //  .screen-#{$breakpoint} .#{$breakpoint}\:w-#{$key} {
    //    @extend .w-#{$key};
    //  }
    //}
  }
  @include media-breakpoints() using($breakpoint) {
    @each $key, $value in $sizes {
      @each $w-class, $w-prop in $w-classes-names {
        @if not ($w-prop == max-width and $value == auto) {
          .#{$breakpoint}\:#{$w-class}-#{$key} {
            #{$w-prop}: #{$value};
          }
        }
      }
    }
  }
}

$h-classes-names: (h: height, max-h: max-height, min-h: min-height);
// classes para height
@mixin generate-height-classes() {

  $sizes: ();
  $sizes: map.merge($sizes, $sizes-alts);
  $sizes: map.merge($sizes, $var-sizes);
  $sizes: map.merge($sizes, $h-sizes);

  @each $key, $value in $sizes {
    @each $h-class, $h-prop in $h-classes-names {
      // se prop for max-height e o valor for auto, não gera a classe
      @if not ($h-prop == max-height and $value == auto) {
        .#{$h-class}-#{$key} {
          #{$h-prop}: #{$value};
        }
      }
    }
  }

  //@include media-breakpoints() using($breakpoint) {
  //  @each $key, $value in $sizes {
  //    @each $h-class, $h-prop in $h-classes-names {
  //      @if not ($h-prop == max-height and $value == auto) {
  //        .#{$breakpoint}\:#{$h-class}-#{$key} {
  //          #{$h-prop}: #{$value};
  //        }
  //      }
  //    }
  //  }
  //}
}