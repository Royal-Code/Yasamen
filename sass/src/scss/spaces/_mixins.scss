@use "sizes" as *;
@use "breaks" as *;

// gera as variáveis de espaçamento
@mixin generate-sizes-variables() {
  @each $key, $value in $sizes {
    --size-#{$key}: #{$value};
  }
  @each $key, $value in $sizing-w-only {
    --size-#{$key}: #{$value};
  }
  @each $key, $value in $sizing-h-only {
    --size-#{$key}: #{$value};
  }
}

// gera as variáveis de breakpoints (--screen-{key})
@mixin generate-breakpoint-variables() {
  @each $key, $value in $breakpoints {
    --screen-#{$key}: #{$value};
  }
}

// classes para screen
@mixin generate-screen-classes() {
  @each $key, $value in $breakpoints {
    .screen-#{$key} {
      width: var(--screen-#{$key});
    }
  }
}

// mix media breakpoints
@mixin media-breakpoints() {
  @each $rule, $breakpoints in $breakpoints-rules {
    @each $key, $value in $breakpoints {
      @media (#{$rule}: #{$value}) {
        @content($key);
      }
    }
  }
}


$w-classes-names: (w: width, max-w: max-width, min-w: min-width);
// classes para width
@mixin generate-width-classes() {
  @each $key, $value in $var-w-sizes {
    @each $w-class, $w-prop in $w-classes-names {
      .#{$w-class}-#{$key} {
        #{$w-prop}: #{$value};
      }
    }
    //@each $breakpoint, $v in $breakpoints {
    //  .screen-#{$breakpoint} .#{$breakpoint}\:w-#{$key} {
    //    @extend .w-#{$key};
    //  }
    //}
  }
  @include media-breakpoints() using ($breakpoint) {
    @each $key, $value in $var-w-sizes {
      @each $w-class, $w-prop in $w-classes-names {
        .#{$breakpoint}\:#{$w-class}-#{$key} {
          #{$w-prop}: #{$value};
        }
      }
    }
  }
}