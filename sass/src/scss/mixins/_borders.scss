@use "../vars/borders" as *;
@use "../vars/colors" as *;
@use "../vars/breaks" as *;
@use "sass:map";

@mixin generate-borders-variables() {
  @each $key, $value in $var-borders-values {
    #{$key}: #{$value};
  }
}

@mixin generate-borders() {

    $sizes: (0: 0);
    $sizes: map.merge($sizes, $var-borders);

    // cores
    @each $color-name, $scale in $var-colors-scales {
        // Criando a classe principal border-{color} (ex: border-primary â†’ border-primary-500)
        .border-#{$color-name} {
            border-color: map.get($var-colors, $color-name);
        }
        @each $s-name, $state in $border-states {
            .#{$s-name}\:border-#{$color-name}:#{$state} {
                @extend .border-#{$color-name};
            }
        }
        // Criando classes border-{color}-{step} (ex: border-primary-100, border-primary-900)
        @each $step, $color in $scale {
            .border-#{$color-name}-#{$step} {
                border-color: $color;
            }
            @each $s-name, $state in $border-states {
                .#{$s-name}\:border-#{$color-name}-#{$step}:#{$state} {
                    @extend .border-#{$color-name}-#{$step};
                }
            }
        }
    }

    .border {
        @extend .border-secondary;
    }
    @each $s-name, $state in $border-states {
        .#{$s-name}\:border:#{$state} {
            @extend .border-secondary;
        }
    }

    // styles
    @each $key, $style in $border-styles {
        .border-#{$key} {
            border-style: #{$style};
        }
        @each $s-name, $state in $border-states {
            .#{$s-name}\:border-#{$key}:#{$state} {
                @extend .border-#{$key};
            }
        }
    }

    .border {
        @extend .border-solid
    }
    @each $s-name, $state in $border-states {
        .#{$s-name}\:border:#{$state} {
            @extend .border-solid;
        }
    }
    
    @each $key, $variant in $border-sides {
        @each $size, $value in $sizes {
            .border-#{$key}-#{$size} {
                border-#{$variant}-width: #{$value};
            }
            .border-#{$size} {
                @extend .border-#{$key}-#{$size};
            }
            @if ($key == s or $key == e) {
                .border-x-#{$size} {
                    @extend .border-#{$key}-#{$size};
                }
            }
            @else {
                .border-y-#{$size} {
                    @extend .border-#{$key}-#{$size};
                }
            }
            @each $s-name, $state in $border-states {
                .#{$s-name}\:border-#{$key}-#{$size}:#{$state} {
                    @extend .border-#{$key}-#{$size};
                }
                .#{$s-name}\:border-#{$size}:#{$state} {
                    @extend .border-#{$key}-#{$size};
                }
                @if ($key == s or $key == e) {
                    .#{$s-name}\:border-x-#{$size}:#{$state} {
                        @extend .border-#{$key}-#{$size};
                    }
                }
                @else {
                    .#{$s-name}\:border-y-#{$size}:#{$state} {
                        @extend .border-#{$key}-#{$size};
                    }
                }
            }
        }
        .border {
            @extend .border-#{$key}-1;
        }
        @each $s-name, $state in $border-states {
            .#{$s-name}\:border:#{$state} {
                @extend .border-#{$key}-1;
            }
        }
    }
    
}