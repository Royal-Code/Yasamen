@typeparam TModel

<CascadingValue Value="Support" IsFixed="true">
    <form @attributes="AdditionalAttributes" @onsubmit="OnSubmitHandler">
        <CascadingValue Value="editContext" IsFixed="true">
            @Fragment
        </CascadingValue>
    </form>
</CascadingValue>

@code {

    private RenderFragment Fragment => builder => ChildContent(Model!)(builder);
    
    protected override void OnInitialized()
    {
        Tracer.Write("ModelEditor", "OnInitialized", Model?.ToString() ?? "null");

        base.OnInitialized();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        Tracer.Write("ModelEditor", "OnAfterRender", firstRender.ToString());

        base.OnAfterRender(firstRender);
    }

    private async Task OnSubmitHandler()
    {
        if (editContext is null)
            return;
        
        if (OnSubmit.HasDelegate)
        {
            await OnSubmit.InvokeAsync(editContext);
        }
        else
        {
            switch (editContext.Validate())
            {
                case true when OnValidSubmit.HasDelegate:
                    await OnValidSubmit.InvokeAsync(editContext);
                    break;
                case false when OnInvalidSubmit.HasDelegate:
                    await OnInvalidSubmit.InvokeAsync(editContext);
                    break;
            }
        }
    }

}