
@typeparam T

<select class="form-select" aria-label="Default select example">
    @foreach (var item in resourceList.Values)
    {
        <option selected="@IsSelected(item)" value="@GetKey(item)">@GetDescription(item)</option>
    }
</select>

@code {
    private IResourceList<T> resourceList = null!;

    protected override async Task OnParametersSetAsync()
    {
        if (Key is null)
            throw new InvalidOperationException("Key is required");
        if (Description is null)
            throw new InvalidOperationException("Description is required");

        if (Items is not null)
        {
            if (Resource is not null)
            {
                throw new InvalidOperationException("Items and Resources can not be informed together");
            }

            resourceList = new ResourceList<T>(Items.ToList());
        }
        else if (Resource is not null)
        {
            resourceList = Resource;
        }
        else if (CascadingResource is not null)
        {
            resourceList = CascadingResource;
        }
        else if (resourceList is not null)
        {
            resourceList = await Resources.Set<T>().ListAsync();
        }

        await base.OnParametersSetAsync();
    }

    private string GetKey(T item)
    {
        return Key(item)?.ToString() ?? string.Empty;
    }

    private bool IsSelected(T item)
    {
        if (Selected is null)
            return false;

        return GetKey(Selected) == GetKey(item);
    }

    private string GetDescription(T item)
    {
        return Description(item);
    }
}
