
<article @attributes="@AdditionalAttributes" class="@articleClasses(this)">
    <header class="@headerClasses(this)">
        @HeaderContent
    </header>
    @MainContent
    @if (FooterContent.IsNotEmptyFragment())
    {
        <footer class="@footerClasses(this)">
            @FooterContent
        </footer>
    }
</article>

@code {
    private static readonly CssMap<ArticleBox> articleClasses = Css.Map<ArticleBox>()
        .Add(static c => c.ArticleBorder)
        .Add(static c => c.ArticleAdditionalClasses)
        .Build();

    private static readonly CssMap<ArticleBox> headerClasses = Css.Map<ArticleBox>()
        .Add(static c => c.HeaderBorder)
        .Add(static c => c.HeaderAdditionalClasses)
        .Build();

    private static readonly CssMap<ArticleBox> footerClasses = Css.Map<ArticleBox>()
        .Add(static c => c.FooterBorder)
        .Add(static c => c.FooterAdditionalClasses)
        .Build();

    [Parameter]
    public BorderClasses ArticleBorder { get; set; } = Css.Border.None();

    [Parameter]
    public BorderClasses HeaderBorder { get; set; } = Css.Border.HeaderWithShadow();

    [Parameter]
    public BorderClasses FooterBorder { get; set; } = Css.Border.Footer();

    [Parameter]
    public string? ArticleAdditionalClasses { get; set; }

    [Parameter]
    public string? HeaderAdditionalClasses { get; set; }

    [Parameter]
    public string? FooterAdditionalClasses { get; set; }

    [Parameter]
    public RenderFragment? HeaderContent { get; set; }

    [Parameter]
    public RenderFragment? MainContent { get; set; }

    [Parameter]
    public RenderFragment? FooterContent { get; set; }

    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object>? AdditionalAttributes { get; set; }
}