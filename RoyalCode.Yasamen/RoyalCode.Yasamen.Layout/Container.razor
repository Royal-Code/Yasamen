
<div style="@FlexRowStyle">
    <div class="@Classes" @attributes="AdditionalAttributes">
        @if (Columns.HasValue)
        {
            <CascadingValue Value="context" IsFixed="true" >
                @ChildContent
            </CascadingValue>
        }
        else
        {
            @ChildContent
        }
    </div>
</div>

@code {
    private ContainerContext? context;

    private CssClassMap Classes => CssClassMap.Create(
        Align.ToItemsCssClass(), 
        Justify.ToContentCssClass(),
        AdditionalClasses!);

    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object>? AdditionalAttributes { get; set; }

    [Parameter]
    public string? AdditionalClasses { get; set; }

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public int? Columns { get; set; }

    [Parameter]
    public Align Align { get; set; }

    [Parameter]
    public Justify Justify { get; set; }

    private string? FlexRowStyle => Columns.HasValue
        ? $"--b-cols-columns: {Columns.Value};"
        : null;

    protected override void OnParametersSet()
    {
        if (Columns.HasValue)
            context = new ContainerContext(Columns.Value);
    }
}