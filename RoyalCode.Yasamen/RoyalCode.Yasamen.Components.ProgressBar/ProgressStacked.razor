<div class="@Classes(this)" style="@ProgressStyle" @attributes="AdditionalAttributes">
    <CascadingValue Value="context" IsFixed="true">
        @ChildContent
    </CascadingValue>
</div>

@code {
    private static CssMap<ProgressStacked> Classes = Css.Map<ProgressStacked>()
        .Add("progress-stacked")
        .Add(p => p.AdditionalClasses)
        .Build();
    
    private string ProgressStyle => Height > 0 ? $"height: {Height}px" : "";
    private readonly StackedContext context = new();

    [Parameter]
    public int Height { get; set; }

    [Parameter]
    public string? AdditionalClasses { get; set; }

    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object>? AdditionalAttributes { get; set; }

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public int MaxValue { get; set; }

    protected override void OnParametersSet()
    {
        context.StackedMaxValue = MaxValue;
        base.OnParametersSet();
    }
}
